"""update_user_table_admin_column

Revision ID: 4156c3e39310
Revises: 17f64331294d
Create Date: 2025-07-05 09:19:51.136901

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4156c3e39310'
down_revision: Union[str, None] = '17f64331294d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course_materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('processing_status', sa.String(length=50), nullable=True),
    sa.Column('processing_errors', sa.Text(), nullable=True),
    sa.Column('material_type', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('content_metadata', sa.JSON(), nullable=True),
    sa.Column('enable_rag', sa.Boolean(), nullable=True),
    sa.Column('auto_extract_questions', sa.Boolean(), nullable=True),
    sa.Column('questions_extracted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_course_materials_id'), 'course_materials', ['id'], unique=False)
    op.add_column('user_preferences', sa.Column('study_reminder_enabled', sa.Boolean(), nullable=True))
    op.add_column('user_preferences', sa.Column('dark_mode', sa.Boolean(), nullable=True))
    op.add_column('user_preferences', sa.Column('notifications_enabled', sa.Boolean(), nullable=True))
    op.add_column('user_preferences', sa.Column('email_notifications', sa.Boolean(), nullable=True))
    op.add_column('user_preferences', sa.Column('show_explanations_immediately', sa.Boolean(), nullable=True))
    op.add_column('user_preferences', sa.Column('shuffle_answers', sa.Boolean(), nullable=True))
    op.add_column('user_preferences', sa.Column('time_limit_enabled', sa.Boolean(), nullable=True))
    op.add_column('user_preferences', sa.Column('default_time_limit', sa.Integer(), nullable=True))
    op.alter_column('user_preferences', 'preferred_difficulty',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
    op.alter_column('user_preferences', 'study_reminder_time',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=5),
               existing_nullable=True)
    op.drop_index(op.f('ix_user_preferences_user_id'), table_name='user_preferences')
    op.create_unique_constraint(None, 'user_preferences', ['user_id'])
    op.drop_column('user_preferences', 'preferred_session_length')
    op.drop_column('user_preferences', 'gamification_enabled')
    op.drop_column('user_preferences', 'theme')
    op.drop_column('user_preferences', 'language')
    op.drop_column('user_preferences', 'adaptive_difficulty')
    op.drop_column('user_preferences', 'spaced_repetition')
    op.drop_column('user_preferences', 'font_size')
    op.drop_column('user_preferences', 'question_types')
    op.drop_column('user_preferences', 'hint_system_enabled')
    op.drop_column('user_preferences', 'exclude_mastered')
    op.drop_column('user_preferences', 'immediate_feedback')
    op.drop_column('user_preferences', 'show_explanations')
    op.drop_column('user_preferences', 'subjects_of_interest')
    op.drop_column('user_preferences', 'time_pressure_mode')
    op.drop_column('user_preferences', 'shuffle_questions')
    op.add_column('user_profiles', sa.Column('institution', sa.String(length=200), nullable=True))
    op.add_column('user_profiles', sa.Column('field_of_study', sa.String(length=100), nullable=True))
    op.add_column('user_profiles', sa.Column('graduation_year', sa.Integer(), nullable=True))
    op.add_column('user_profiles', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('user_profiles', sa.Column('avatar_url', sa.String(length=500), nullable=True))
    op.add_column('user_profiles', sa.Column('language', sa.String(length=10), nullable=True))
    op.drop_index(op.f('ix_user_profiles_user_id'), table_name='user_profiles')
    op.create_unique_constraint(None, 'user_profiles', ['user_id'])
    op.drop_column('user_profiles', 'university')
    op.drop_column('user_profiles', 'major')
    op.drop_column('user_profiles', 'email_notifications')
    op.drop_column('user_profiles', 'degree')
    op.drop_column('user_profiles', 'last_name')
    op.drop_column('user_profiles', 'show_progress')
    op.drop_column('user_profiles', 'date_of_birth')
    op.drop_column('user_profiles', 'study_reminders')
    op.drop_column('user_profiles', 'minor')
    op.drop_column('user_profiles', 'allow_comparison')
    op.drop_column('user_profiles', 'profile_visibility')
    op.drop_column('user_profiles', 'year')
    op.drop_column('user_profiles', 'country')
    op.drop_column('user_profiles', 'first_name')
    op.drop_column('user_profiles', 'gpa')
    op.drop_column('user_profiles', 'push_notifications')
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.drop_column('users', 'is_superuser')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_column('users', 'is_admin')
    op.add_column('user_profiles', sa.Column('push_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('gpa', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('year', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('profile_visibility', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('allow_comparison', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('minor', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('study_reminders', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('date_of_birth', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('show_progress', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('degree', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('email_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('major', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('university', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_profiles', type_='unique')
    op.create_index(op.f('ix_user_profiles_user_id'), 'user_profiles', ['user_id'], unique=True)
    op.drop_column('user_profiles', 'language')
    op.drop_column('user_profiles', 'avatar_url')
    op.drop_column('user_profiles', 'bio')
    op.drop_column('user_profiles', 'graduation_year')
    op.drop_column('user_profiles', 'field_of_study')
    op.drop_column('user_profiles', 'institution')
    op.add_column('user_preferences', sa.Column('shuffle_questions', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('time_pressure_mode', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('subjects_of_interest', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('show_explanations', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('immediate_feedback', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('exclude_mastered', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('hint_system_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('question_types', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('font_size', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('spaced_repetition', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('adaptive_difficulty', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('language', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('theme', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('gamification_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('preferred_session_length', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_preferences', type_='unique')
    op.create_index(op.f('ix_user_preferences_user_id'), 'user_preferences', ['user_id'], unique=True)
    op.alter_column('user_preferences', 'study_reminder_time',
               existing_type=sa.String(length=5),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.alter_column('user_preferences', 'preferred_difficulty',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.drop_column('user_preferences', 'default_time_limit')
    op.drop_column('user_preferences', 'time_limit_enabled')
    op.drop_column('user_preferences', 'shuffle_answers')
    op.drop_column('user_preferences', 'show_explanations_immediately')
    op.drop_column('user_preferences', 'email_notifications')
    op.drop_column('user_preferences', 'notifications_enabled')
    op.drop_column('user_preferences', 'dark_mode')
    op.drop_column('user_preferences', 'study_reminder_enabled')
    op.drop_index(op.f('ix_course_materials_id'), table_name='course_materials')
    op.drop_table('course_materials')
    # ### end Alembic commands ###
