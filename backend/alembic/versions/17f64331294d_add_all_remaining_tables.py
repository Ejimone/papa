"""add_all_remaining_tables

Revision ID: 17f64331294d
Revises: 26efbe1a26cf
Create Date: 2025-07-01 16:08:57.640297

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '17f64331294d'
down_revision: Union[str, None] = '26efbe1a26cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subjects',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('department', sa.String(length=200), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=True),
    sa.Column('academic_year', sa.String(length=20), nullable=True),
    sa.Column('semester', sa.String(length=20), nullable=True),
    sa.Column('instructor', sa.String(length=200), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('subcategory', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_popular', sa.Boolean(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=True),
    sa.Column('total_students', sa.Integer(), nullable=True),
    sa.Column('difficulty_average', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subjects_code'), 'subjects', ['code'], unique=True)
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_index(op.f('ix_subjects_name'), 'subjects', ['name'], unique=False)
    op.create_table('system_analytics',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('total_users', sa.Integer(), nullable=True),
    sa.Column('active_users', sa.Integer(), nullable=True),
    sa.Column('new_users', sa.Integer(), nullable=True),
    sa.Column('returning_users', sa.Integer(), nullable=True),
    sa.Column('questions_added', sa.Integer(), nullable=True),
    sa.Column('questions_processed', sa.Integer(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=True),
    sa.Column('total_sessions', sa.Integer(), nullable=True),
    sa.Column('total_questions_attempted', sa.Integer(), nullable=True),
    sa.Column('total_study_time', sa.Integer(), nullable=True),
    sa.Column('api_response_time_avg', sa.Float(), nullable=True),
    sa.Column('api_response_time_p95', sa.Float(), nullable=True),
    sa.Column('error_rate', sa.Float(), nullable=True),
    sa.Column('uptime_percentage', sa.Float(), nullable=True),
    sa.Column('ai_requests_count', sa.Integer(), nullable=True),
    sa.Column('ai_response_time_avg', sa.Float(), nullable=True),
    sa.Column('ai_success_rate', sa.Float(), nullable=True),
    sa.Column('user_retention_1day', sa.Float(), nullable=True),
    sa.Column('user_retention_7day', sa.Float(), nullable=True),
    sa.Column('user_retention_30day', sa.Float(), nullable=True),
    sa.Column('database_size_mb', sa.Float(), nullable=True),
    sa.Column('storage_used_mb', sa.Float(), nullable=True),
    sa.Column('bandwidth_used_mb', sa.Float(), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_analytics_date'), 'system_analytics', ['date'], unique=False)
    op.create_index(op.f('ix_system_analytics_id'), 'system_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_system_analytics_metric_type'), 'system_analytics', ['metric_type'], unique=False)
    op.create_table('daily_user_activity',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('questions_attempted', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('incorrect_answers', sa.Integer(), nullable=True),
    sa.Column('study_time_minutes', sa.Integer(), nullable=True),
    sa.Column('sessions_completed', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_user_activity_date'), 'daily_user_activity', ['date'], unique=False)
    op.create_index(op.f('ix_daily_user_activity_id'), 'daily_user_activity', ['id'], unique=False)
    op.create_index(op.f('ix_daily_user_activity_user_id'), 'daily_user_activity', ['user_id'], unique=False)
    op.create_table('difficulty_level_analytics',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('difficulty_level', sa.String(length=20), nullable=False),
    sa.Column('total_attempts', sa.Integer(), nullable=True),
    sa.Column('correct_attempts', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('average_time_per_question', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_difficulty_level_analytics_difficulty_level'), 'difficulty_level_analytics', ['difficulty_level'], unique=False)
    op.create_index(op.f('ix_difficulty_level_analytics_id'), 'difficulty_level_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_difficulty_level_analytics_user_id'), 'difficulty_level_analytics', ['user_id'], unique=False)
    op.create_table('learning_path_analytics',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('path_name', sa.String(length=100), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('progress_percentage', sa.Float(), nullable=True),
    sa.Column('estimated_completion_time', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_learning_path_analytics_id'), 'learning_path_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_learning_path_analytics_user_id'), 'learning_path_analytics', ['user_id'], unique=False)
    op.create_table('monthly_user_activity',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('questions_attempted', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('study_time_minutes', sa.Integer(), nullable=True),
    sa.Column('sessions_completed', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_monthly_user_activity_id'), 'monthly_user_activity', ['id'], unique=False)
    op.create_index(op.f('ix_monthly_user_activity_month'), 'monthly_user_activity', ['month'], unique=False)
    op.create_index(op.f('ix_monthly_user_activity_user_id'), 'monthly_user_activity', ['user_id'], unique=False)
    op.create_index(op.f('ix_monthly_user_activity_year'), 'monthly_user_activity', ['year'], unique=False)
    op.create_table('study_groups',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('max_members', sa.Integer(), nullable=True),
    sa.Column('requires_approval', sa.Boolean(), nullable=True),
    sa.Column('subject_ids', sa.JSON(), nullable=True),
    sa.Column('academic_level', sa.String(length=50), nullable=True),
    sa.Column('university', sa.String(length=200), nullable=True),
    sa.Column('member_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_study_groups_id'), 'study_groups', ['id'], unique=False)
    op.create_table('subject_performance_analytics',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('total_attempts', sa.Integer(), nullable=True),
    sa.Column('correct_attempts', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('average_time_per_question', sa.Float(), nullable=True),
    sa.Column('improvement_rate', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subject_performance_analytics_id'), 'subject_performance_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_subject_performance_analytics_subject_id'), 'subject_performance_analytics', ['subject_id'], unique=False)
    op.create_index(op.f('ix_subject_performance_analytics_user_id'), 'subject_performance_analytics', ['user_id'], unique=False)
    op.create_table('topics',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('parent_topic_id', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=True),
    sa.Column('learning_objectives', sa.JSON(), nullable=True),
    sa.Column('key_concepts', sa.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('estimated_study_time', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=True),
    sa.Column('completion_rate', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topics_id'), 'topics', ['id'], unique=False)
    op.create_index(op.f('ix_topics_name'), 'topics', ['name'], unique=False)
    op.create_index(op.f('ix_topics_parent_topic_id'), 'topics', ['parent_topic_id'], unique=False)
    op.create_index(op.f('ix_topics_subject_id'), 'topics', ['subject_id'], unique=False)
    op.create_table('user_analytics',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('questions_attempted', sa.Integer(), nullable=True),
    sa.Column('questions_correct', sa.Integer(), nullable=True),
    sa.Column('study_time_minutes', sa.Integer(), nullable=True),
    sa.Column('sessions_count', sa.Integer(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('average_response_time', sa.Float(), nullable=True),
    sa.Column('improvement_score', sa.Float(), nullable=True),
    sa.Column('consistency_score', sa.Float(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('explanations_viewed', sa.Integer(), nullable=True),
    sa.Column('bookmarks_added', sa.Integer(), nullable=True),
    sa.Column('reviews_completed', sa.Integer(), nullable=True),
    sa.Column('app_opens', sa.Integer(), nullable=True),
    sa.Column('feature_usage', sa.JSON(), nullable=True),
    sa.Column('navigation_patterns', sa.JSON(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('longest_streak', sa.Integer(), nullable=True),
    sa.Column('achievements_earned', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_analytics_date'), 'user_analytics', ['date'], unique=False)
    op.create_index(op.f('ix_user_analytics_id'), 'user_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_user_analytics_user_id'), 'user_analytics', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('preferred_difficulty', sa.String(length=50), nullable=True),
    sa.Column('preferred_session_length', sa.Integer(), nullable=True),
    sa.Column('daily_question_goal', sa.Integer(), nullable=True),
    sa.Column('study_reminder_time', sa.String(length=10), nullable=True),
    sa.Column('question_types', sa.JSON(), nullable=True),
    sa.Column('subjects_of_interest', sa.JSON(), nullable=True),
    sa.Column('exclude_mastered', sa.Boolean(), nullable=True),
    sa.Column('shuffle_questions', sa.Boolean(), nullable=True),
    sa.Column('immediate_feedback', sa.Boolean(), nullable=True),
    sa.Column('show_explanations', sa.Boolean(), nullable=True),
    sa.Column('hint_system_enabled', sa.Boolean(), nullable=True),
    sa.Column('gamification_enabled', sa.Boolean(), nullable=True),
    sa.Column('theme', sa.String(length=20), nullable=True),
    sa.Column('font_size', sa.String(length=20), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('spaced_repetition', sa.Boolean(), nullable=True),
    sa.Column('adaptive_difficulty', sa.Boolean(), nullable=True),
    sa.Column('time_pressure_mode', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_index(op.f('ix_user_preferences_user_id'), 'user_preferences', ['user_id'], unique=True)
    op.create_table('user_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('academic_level', sa.String(length=50), nullable=True),
    sa.Column('university', sa.String(length=200), nullable=True),
    sa.Column('degree', sa.String(length=200), nullable=True),
    sa.Column('year', sa.String(length=20), nullable=True),
    sa.Column('major', sa.String(length=200), nullable=True),
    sa.Column('minor', sa.String(length=200), nullable=True),
    sa.Column('gpa', sa.Float(), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('push_notifications', sa.Boolean(), nullable=True),
    sa.Column('study_reminders', sa.Boolean(), nullable=True),
    sa.Column('profile_visibility', sa.String(length=20), nullable=True),
    sa.Column('show_progress', sa.Boolean(), nullable=True),
    sa.Column('allow_comparison', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_user_profiles_user_id'), 'user_profiles', ['user_id'], unique=True)
    op.create_table('user_subjects',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('enrolled_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'subject_id')
    )
    op.create_table('weekly_user_activity',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('week_number', sa.Integer(), nullable=False),
    sa.Column('questions_attempted', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('study_time_minutes', sa.Integer(), nullable=True),
    sa.Column('sessions_completed', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weekly_user_activity_id'), 'weekly_user_activity', ['id'], unique=False)
    op.create_index(op.f('ix_weekly_user_activity_user_id'), 'weekly_user_activity', ['user_id'], unique=False)
    op.create_index(op.f('ix_weekly_user_activity_week_number'), 'weekly_user_activity', ['week_number'], unique=False)
    op.create_index(op.f('ix_weekly_user_activity_year'), 'weekly_user_activity', ['year'], unique=False)
    op.create_table('learning_analytics',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('week_start', sa.DateTime(), nullable=False),
    sa.Column('week_end', sa.DateTime(), nullable=False),
    sa.Column('questions_mastered', sa.Integer(), nullable=True),
    sa.Column('concepts_learned', sa.JSON(), nullable=True),
    sa.Column('difficulty_progression', sa.Float(), nullable=True),
    sa.Column('mastery_level', sa.Enum('BEGINNER', 'DEVELOPING', 'PROFICIENT', 'ADVANCED', 'EXPERT', name='performancelevel'), nullable=True),
    sa.Column('preferred_study_times', sa.JSON(), nullable=True),
    sa.Column('session_lengths', sa.JSON(), nullable=True),
    sa.Column('break_patterns', sa.JSON(), nullable=True),
    sa.Column('learning_velocity', sa.Float(), nullable=True),
    sa.Column('retention_rate', sa.Float(), nullable=True),
    sa.Column('transfer_learning', sa.Float(), nullable=True),
    sa.Column('mental_effort_score', sa.Float(), nullable=True),
    sa.Column('cognitive_load_level', sa.String(length=20), nullable=True),
    sa.Column('fatigue_indicators', sa.JSON(), nullable=True),
    sa.Column('learning_style_indicators', sa.JSON(), nullable=True),
    sa.Column('optimal_difficulty_level', sa.Float(), nullable=True),
    sa.Column('recommended_study_schedule', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_learning_analytics_id'), 'learning_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_learning_analytics_subject_id'), 'learning_analytics', ['subject_id'], unique=False)
    op.create_index(op.f('ix_learning_analytics_topic_id'), 'learning_analytics', ['topic_id'], unique=False)
    op.create_index(op.f('ix_learning_analytics_user_id'), 'learning_analytics', ['user_id'], unique=False)
    op.create_index(op.f('ix_learning_analytics_week_start'), 'learning_analytics', ['week_start'], unique=False)
    op.create_table('performance_trends',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False),
    sa.Column('questions_attempted', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('improvement_rate', sa.Float(), nullable=True),
    sa.Column('consistency_score', sa.Float(), nullable=True),
    sa.Column('average_response_time', sa.Float(), nullable=True),
    sa.Column('study_time_total', sa.Integer(), nullable=True),
    sa.Column('sessions_count', sa.Integer(), nullable=True),
    sa.Column('trend_direction', sa.String(length=20), nullable=True),
    sa.Column('trend_strength', sa.Float(), nullable=True),
    sa.Column('confidence_interval', sa.Float(), nullable=True),
    sa.Column('predicted_next_score', sa.Float(), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('factors_influencing', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_trends_id'), 'performance_trends', ['id'], unique=False)
    op.create_index(op.f('ix_performance_trends_period_start'), 'performance_trends', ['period_start'], unique=False)
    op.create_index(op.f('ix_performance_trends_subject_id'), 'performance_trends', ['subject_id'], unique=False)
    op.create_index(op.f('ix_performance_trends_topic_id'), 'performance_trends', ['topic_id'], unique=False)
    op.create_index(op.f('ix_performance_trends_user_id'), 'performance_trends', ['user_id'], unique=False)
    op.create_table('practice_sessions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_type', sa.Enum('QUICK_PRACTICE', 'TARGETED_STUDY', 'MOCK_TEST', 'REVIEW_SESSION', 'CHALLENGE_MODE', name='sessiontype'), nullable=False),
    sa.Column('status', sa.Enum('STARTED', 'IN_PROGRESS', 'COMPLETED', 'ABANDONED', 'PAUSED', name='sessionstatus'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=50), nullable=True),
    sa.Column('question_count', sa.Integer(), nullable=True),
    sa.Column('time_limit', sa.Integer(), nullable=True),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('total_time_spent', sa.Integer(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('incorrect_answers', sa.Integer(), nullable=True),
    sa.Column('skipped_questions', sa.Integer(), nullable=True),
    sa.Column('score_percentage', sa.Float(), nullable=True),
    sa.Column('average_time_per_question', sa.Float(), nullable=True),
    sa.Column('fastest_answer_time', sa.Float(), nullable=True),
    sa.Column('slowest_answer_time', sa.Float(), nullable=True),
    sa.Column('strengths', sa.JSON(), nullable=True),
    sa.Column('weaknesses', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_practice_sessions_id'), 'practice_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_practice_sessions_subject_id'), 'practice_sessions', ['subject_id'], unique=False)
    op.create_index(op.f('ix_practice_sessions_topic_id'), 'practice_sessions', ['topic_id'], unique=False)
    op.create_index(op.f('ix_practice_sessions_user_id'), 'practice_sessions', ['user_id'], unique=False)
    op.create_table('questions',
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('question_type', sa.Enum('MULTIPLE_CHOICE', 'SHORT_ANSWER', 'ESSAY', 'NUMERICAL', 'TRUE_FALSE', 'FILL_BLANK', name='questiontype'), nullable=False),
    sa.Column('difficulty_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='difficultylevel'), nullable=False),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('time_limit', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('priority_score', sa.Float(), nullable=True),
    sa.Column('frequency_score', sa.Float(), nullable=True),
    sa.Column('is_processed_for_embedding', sa.Boolean(), nullable=True),
    sa.Column('processing_error_log', sa.Text(), nullable=True),
    sa.Column('vector_id', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_created_by'), 'questions', ['created_by'], unique=False)
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.create_index(op.f('ix_questions_subject_id'), 'questions', ['subject_id'], unique=False)
    op.create_index(op.f('ix_questions_title'), 'questions', ['title'], unique=False)
    op.create_index(op.f('ix_questions_topic_id'), 'questions', ['topic_id'], unique=False)
    op.create_index(op.f('ix_questions_vector_id'), 'questions', ['vector_id'], unique=True)
    op.create_table('topic_performance_analytics',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('total_attempts', sa.Integer(), nullable=True),
    sa.Column('correct_attempts', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('average_time_per_question', sa.Float(), nullable=True),
    sa.Column('improvement_rate', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topic_performance_analytics_id'), 'topic_performance_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_topic_performance_analytics_topic_id'), 'topic_performance_analytics', ['topic_id'], unique=False)
    op.create_index(op.f('ix_topic_performance_analytics_user_id'), 'topic_performance_analytics', ['user_id'], unique=False)
    op.create_table('user_progress',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('total_questions_attempted', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('incorrect_answers', sa.Integer(), nullable=True),
    sa.Column('skipped_questions', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('average_time_per_question', sa.Float(), nullable=True),
    sa.Column('improvement_rate', sa.Float(), nullable=True),
    sa.Column('consistency_score', sa.Float(), nullable=True),
    sa.Column('mastery_level', sa.Float(), nullable=True),
    sa.Column('competency_score', sa.Float(), nullable=True),
    sa.Column('weak_areas', sa.JSON(), nullable=True),
    sa.Column('strong_areas', sa.JSON(), nullable=True),
    sa.Column('preferred_difficulty', sa.String(length=50), nullable=True),
    sa.Column('learning_velocity', sa.Float(), nullable=True),
    sa.Column('retention_rate', sa.Float(), nullable=True),
    sa.Column('last_practiced_at', sa.DateTime(), nullable=True),
    sa.Column('streak_days', sa.Integer(), nullable=True),
    sa.Column('total_study_time', sa.Integer(), nullable=True),
    sa.Column('sessions_completed', sa.Integer(), nullable=True),
    sa.Column('target_accuracy', sa.Float(), nullable=True),
    sa.Column('daily_question_goal', sa.Integer(), nullable=True),
    sa.Column('weekly_time_goal', sa.Integer(), nullable=True),
    sa.Column('learning_style', sa.String(length=100), nullable=True),
    sa.Column('predicted_exam_score', sa.Float(), nullable=True),
    sa.Column('recommended_study_time', sa.Integer(), nullable=True),
    sa.Column('next_review_topics', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_progress_id'), 'user_progress', ['id'], unique=False)
    op.create_index(op.f('ix_user_progress_subject_id'), 'user_progress', ['subject_id'], unique=False)
    op.create_index(op.f('ix_user_progress_topic_id'), 'user_progress', ['topic_id'], unique=False)
    op.create_index(op.f('ix_user_progress_user_id'), 'user_progress', ['user_id'], unique=False)
    op.create_table('user_study_groups',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['study_groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('user_topic_interests',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('interest_level', sa.Integer(), nullable=True),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'topic_id')
    )
    op.create_table('explanations',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('explanation_type', sa.String(length=50), nullable=True),
    sa.Column('approach', sa.String(length=100), nullable=True),
    sa.Column('difficulty_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='difficultylevel'), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
    sa.Column('ai_model', sa.String(length=100), nullable=True),
    sa.Column('generation_prompt', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verified_by', sa.Integer(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('helpful_votes', sa.Integer(), nullable=True),
    sa.Column('total_votes', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_explanations_id'), 'explanations', ['id'], unique=False)
    op.create_index(op.f('ix_explanations_question_id'), 'explanations', ['question_id'], unique=False)
    op.create_table('hints',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('hint_type', sa.String(length=50), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
    sa.Column('ai_model', sa.String(length=100), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('effectiveness_score', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hints_id'), 'hints', ['id'], unique=False)
    op.create_index(op.f('ix_hints_question_id'), 'hints', ['question_id'], unique=False)
    op.create_table('question_analytics',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('views_count', sa.Integer(), nullable=True),
    sa.Column('attempts_count', sa.Integer(), nullable=True),
    sa.Column('unique_users', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('average_time', sa.Float(), nullable=True),
    sa.Column('difficulty_rating', sa.Float(), nullable=True),
    sa.Column('bookmark_count', sa.Integer(), nullable=True),
    sa.Column('hint_requests', sa.Integer(), nullable=True),
    sa.Column('explanation_views', sa.Integer(), nullable=True),
    sa.Column('skip_rate', sa.Float(), nullable=True),
    sa.Column('user_ratings', sa.JSON(), nullable=True),
    sa.Column('reported_issues', sa.Integer(), nullable=True),
    sa.Column('improvement_suggestions', sa.JSON(), nullable=True),
    sa.Column('difficulty_accuracy', sa.Float(), nullable=True),
    sa.Column('concept_coverage', sa.Float(), nullable=True),
    sa.Column('discrimination_index', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_analytics_date'), 'question_analytics', ['date'], unique=False)
    op.create_index(op.f('ix_question_analytics_id'), 'question_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_question_analytics_question_id'), 'question_analytics', ['question_id'], unique=False)
    op.create_table('question_images',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=False),
    sa.Column('image_path', sa.String(length=500), nullable=True),
    sa.Column('image_type', sa.String(length=50), nullable=True),
    sa.Column('ocr_text', sa.Text(), nullable=True),
    sa.Column('ocr_confidence', sa.Float(), nullable=True),
    sa.Column('alt_text', sa.Text(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_images_id'), 'question_images', ['id'], unique=False)
    op.create_index(op.f('ix_question_images_question_id'), 'question_images', ['question_id'], unique=False)
    op.create_table('question_metadata',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=200), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('semester', sa.String(length=50), nullable=True),
    sa.Column('institution', sa.String(length=200), nullable=True),
    sa.Column('exam_type', sa.String(length=100), nullable=True),
    sa.Column('concepts', sa.JSON(), nullable=True),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('learning_objectives', sa.JSON(), nullable=True),
    sa.Column('clarity_score', sa.Float(), nullable=True),
    sa.Column('completeness_score', sa.Float(), nullable=True),
    sa.Column('difficulty_confidence', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_metadata_id'), 'question_metadata', ['id'], unique=False)
    op.create_index(op.f('ix_question_metadata_question_id'), 'question_metadata', ['question_id'], unique=True)
    op.create_table('question_tags',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(length=100), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('question_id', 'tag_name')
    )
    op.create_table('similar_questions',
    sa.Column('original_question_id', sa.Integer(), nullable=False),
    sa.Column('similar_question_id', sa.Integer(), nullable=False),
    sa.Column('similarity_score', sa.Float(), nullable=False),
    sa.Column('similarity_type', sa.String(length=50), nullable=True),
    sa.Column('algorithm_used', sa.String(length=100), nullable=True),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['original_question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['similar_question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_similar_questions_id'), 'similar_questions', ['id'], unique=False)
    op.create_index(op.f('ix_similar_questions_original_question_id'), 'similar_questions', ['original_question_id'], unique=False)
    op.create_index(op.f('ix_similar_questions_similar_question_id'), 'similar_questions', ['similar_question_id'], unique=False)
    op.create_table('user_attempts',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('user_answer', sa.Text(), nullable=True),
    sa.Column('selected_options', sa.JSON(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('CORRECT', 'INCORRECT', 'PARTIALLY_CORRECT', 'SKIPPED', 'FLAGGED', name='attemptstatus'), nullable=False),
    sa.Column('time_taken', sa.Float(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('explanation_viewed', sa.Boolean(), nullable=True),
    sa.Column('flagged_for_review', sa.Boolean(), nullable=True),
    sa.Column('confidence_level', sa.Integer(), nullable=True),
    sa.Column('perceived_difficulty', sa.Integer(), nullable=True),
    sa.Column('attempt_number', sa.Integer(), nullable=True),
    sa.Column('improvement_score', sa.Float(), nullable=True),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['practice_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_attempts_id'), 'user_attempts', ['id'], unique=False)
    op.create_index(op.f('ix_user_attempts_question_id'), 'user_attempts', ['question_id'], unique=False)
    op.create_index(op.f('ix_user_attempts_session_id'), 'user_attempts', ['session_id'], unique=False)
    op.create_index(op.f('ix_user_attempts_user_id'), 'user_attempts', ['user_id'], unique=False)
    op.create_table('user_bookmarks',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('bookmark_type', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('target_review_date', sa.DateTime(), nullable=True),
    sa.Column('review_count', sa.Integer(), nullable=True),
    sa.Column('last_reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_mastered', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_bookmarks_id'), 'user_bookmarks', ['id'], unique=False)
    op.create_index(op.f('ix_user_bookmarks_question_id'), 'user_bookmarks', ['question_id'], unique=False)
    op.create_index(op.f('ix_user_bookmarks_user_id'), 'user_bookmarks', ['user_id'], unique=False)
    op.create_table('user_events',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.Enum('LOGIN', 'LOGOUT', 'QUESTION_VIEWED', 'QUESTION_ANSWERED', 'HINT_REQUESTED', 'EXPLANATION_VIEWED', 'BOOKMARK_ADDED', 'SESSION_STARTED', 'SESSION_COMPLETED', 'SEARCH_PERFORMED', 'FILTER_APPLIED', name='eventtype'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('page_url', sa.String(length=500), nullable=True),
    sa.Column('referrer', sa.String(length=500), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_events_event_type'), 'user_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_user_events_id'), 'user_events', ['id'], unique=False)
    op.create_index(op.f('ix_user_events_question_id'), 'user_events', ['question_id'], unique=False)
    op.create_index(op.f('ix_user_events_session_id'), 'user_events', ['session_id'], unique=False)
    op.create_index(op.f('ix_user_events_subject_id'), 'user_events', ['subject_id'], unique=False)
    op.create_index(op.f('ix_user_events_timestamp'), 'user_events', ['timestamp'], unique=False)
    op.create_index(op.f('ix_user_events_user_id'), 'user_events', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_events_user_id'), table_name='user_events')
    op.drop_index(op.f('ix_user_events_timestamp'), table_name='user_events')
    op.drop_index(op.f('ix_user_events_subject_id'), table_name='user_events')
    op.drop_index(op.f('ix_user_events_session_id'), table_name='user_events')
    op.drop_index(op.f('ix_user_events_question_id'), table_name='user_events')
    op.drop_index(op.f('ix_user_events_id'), table_name='user_events')
    op.drop_index(op.f('ix_user_events_event_type'), table_name='user_events')
    op.drop_table('user_events')
    op.drop_index(op.f('ix_user_bookmarks_user_id'), table_name='user_bookmarks')
    op.drop_index(op.f('ix_user_bookmarks_question_id'), table_name='user_bookmarks')
    op.drop_index(op.f('ix_user_bookmarks_id'), table_name='user_bookmarks')
    op.drop_table('user_bookmarks')
    op.drop_index(op.f('ix_user_attempts_user_id'), table_name='user_attempts')
    op.drop_index(op.f('ix_user_attempts_session_id'), table_name='user_attempts')
    op.drop_index(op.f('ix_user_attempts_question_id'), table_name='user_attempts')
    op.drop_index(op.f('ix_user_attempts_id'), table_name='user_attempts')
    op.drop_table('user_attempts')
    op.drop_index(op.f('ix_similar_questions_similar_question_id'), table_name='similar_questions')
    op.drop_index(op.f('ix_similar_questions_original_question_id'), table_name='similar_questions')
    op.drop_index(op.f('ix_similar_questions_id'), table_name='similar_questions')
    op.drop_table('similar_questions')
    op.drop_table('question_tags')
    op.drop_index(op.f('ix_question_metadata_question_id'), table_name='question_metadata')
    op.drop_index(op.f('ix_question_metadata_id'), table_name='question_metadata')
    op.drop_table('question_metadata')
    op.drop_index(op.f('ix_question_images_question_id'), table_name='question_images')
    op.drop_index(op.f('ix_question_images_id'), table_name='question_images')
    op.drop_table('question_images')
    op.drop_index(op.f('ix_question_analytics_question_id'), table_name='question_analytics')
    op.drop_index(op.f('ix_question_analytics_id'), table_name='question_analytics')
    op.drop_index(op.f('ix_question_analytics_date'), table_name='question_analytics')
    op.drop_table('question_analytics')
    op.drop_index(op.f('ix_hints_question_id'), table_name='hints')
    op.drop_index(op.f('ix_hints_id'), table_name='hints')
    op.drop_table('hints')
    op.drop_index(op.f('ix_explanations_question_id'), table_name='explanations')
    op.drop_index(op.f('ix_explanations_id'), table_name='explanations')
    op.drop_table('explanations')
    op.drop_table('user_topic_interests')
    op.drop_table('user_study_groups')
    op.drop_index(op.f('ix_user_progress_user_id'), table_name='user_progress')
    op.drop_index(op.f('ix_user_progress_topic_id'), table_name='user_progress')
    op.drop_index(op.f('ix_user_progress_subject_id'), table_name='user_progress')
    op.drop_index(op.f('ix_user_progress_id'), table_name='user_progress')
    op.drop_table('user_progress')
    op.drop_index(op.f('ix_topic_performance_analytics_user_id'), table_name='topic_performance_analytics')
    op.drop_index(op.f('ix_topic_performance_analytics_topic_id'), table_name='topic_performance_analytics')
    op.drop_index(op.f('ix_topic_performance_analytics_id'), table_name='topic_performance_analytics')
    op.drop_table('topic_performance_analytics')
    op.drop_index(op.f('ix_questions_vector_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_topic_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_title'), table_name='questions')
    op.drop_index(op.f('ix_questions_subject_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_created_by'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_practice_sessions_user_id'), table_name='practice_sessions')
    op.drop_index(op.f('ix_practice_sessions_topic_id'), table_name='practice_sessions')
    op.drop_index(op.f('ix_practice_sessions_subject_id'), table_name='practice_sessions')
    op.drop_index(op.f('ix_practice_sessions_id'), table_name='practice_sessions')
    op.drop_table('practice_sessions')
    op.drop_index(op.f('ix_performance_trends_user_id'), table_name='performance_trends')
    op.drop_index(op.f('ix_performance_trends_topic_id'), table_name='performance_trends')
    op.drop_index(op.f('ix_performance_trends_subject_id'), table_name='performance_trends')
    op.drop_index(op.f('ix_performance_trends_period_start'), table_name='performance_trends')
    op.drop_index(op.f('ix_performance_trends_id'), table_name='performance_trends')
    op.drop_table('performance_trends')
    op.drop_index(op.f('ix_learning_analytics_week_start'), table_name='learning_analytics')
    op.drop_index(op.f('ix_learning_analytics_user_id'), table_name='learning_analytics')
    op.drop_index(op.f('ix_learning_analytics_topic_id'), table_name='learning_analytics')
    op.drop_index(op.f('ix_learning_analytics_subject_id'), table_name='learning_analytics')
    op.drop_index(op.f('ix_learning_analytics_id'), table_name='learning_analytics')
    op.drop_table('learning_analytics')
    op.drop_index(op.f('ix_weekly_user_activity_year'), table_name='weekly_user_activity')
    op.drop_index(op.f('ix_weekly_user_activity_week_number'), table_name='weekly_user_activity')
    op.drop_index(op.f('ix_weekly_user_activity_user_id'), table_name='weekly_user_activity')
    op.drop_index(op.f('ix_weekly_user_activity_id'), table_name='weekly_user_activity')
    op.drop_table('weekly_user_activity')
    op.drop_table('user_subjects')
    op.drop_index(op.f('ix_user_profiles_user_id'), table_name='user_profiles')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_user_preferences_user_id'), table_name='user_preferences')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_user_analytics_user_id'), table_name='user_analytics')
    op.drop_index(op.f('ix_user_analytics_id'), table_name='user_analytics')
    op.drop_index(op.f('ix_user_analytics_date'), table_name='user_analytics')
    op.drop_table('user_analytics')
    op.drop_index(op.f('ix_topics_subject_id'), table_name='topics')
    op.drop_index(op.f('ix_topics_parent_topic_id'), table_name='topics')
    op.drop_index(op.f('ix_topics_name'), table_name='topics')
    op.drop_index(op.f('ix_topics_id'), table_name='topics')
    op.drop_table('topics')
    op.drop_index(op.f('ix_subject_performance_analytics_user_id'), table_name='subject_performance_analytics')
    op.drop_index(op.f('ix_subject_performance_analytics_subject_id'), table_name='subject_performance_analytics')
    op.drop_index(op.f('ix_subject_performance_analytics_id'), table_name='subject_performance_analytics')
    op.drop_table('subject_performance_analytics')
    op.drop_index(op.f('ix_study_groups_id'), table_name='study_groups')
    op.drop_table('study_groups')
    op.drop_index(op.f('ix_monthly_user_activity_year'), table_name='monthly_user_activity')
    op.drop_index(op.f('ix_monthly_user_activity_user_id'), table_name='monthly_user_activity')
    op.drop_index(op.f('ix_monthly_user_activity_month'), table_name='monthly_user_activity')
    op.drop_index(op.f('ix_monthly_user_activity_id'), table_name='monthly_user_activity')
    op.drop_table('monthly_user_activity')
    op.drop_index(op.f('ix_learning_path_analytics_user_id'), table_name='learning_path_analytics')
    op.drop_index(op.f('ix_learning_path_analytics_id'), table_name='learning_path_analytics')
    op.drop_table('learning_path_analytics')
    op.drop_index(op.f('ix_difficulty_level_analytics_user_id'), table_name='difficulty_level_analytics')
    op.drop_index(op.f('ix_difficulty_level_analytics_id'), table_name='difficulty_level_analytics')
    op.drop_index(op.f('ix_difficulty_level_analytics_difficulty_level'), table_name='difficulty_level_analytics')
    op.drop_table('difficulty_level_analytics')
    op.drop_index(op.f('ix_daily_user_activity_user_id'), table_name='daily_user_activity')
    op.drop_index(op.f('ix_daily_user_activity_id'), table_name='daily_user_activity')
    op.drop_index(op.f('ix_daily_user_activity_date'), table_name='daily_user_activity')
    op.drop_table('daily_user_activity')
    op.drop_index(op.f('ix_system_analytics_metric_type'), table_name='system_analytics')
    op.drop_index(op.f('ix_system_analytics_id'), table_name='system_analytics')
    op.drop_index(op.f('ix_system_analytics_date'), table_name='system_analytics')
    op.drop_table('system_analytics')
    op.drop_index(op.f('ix_subjects_name'), table_name='subjects')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_index(op.f('ix_subjects_code'), table_name='subjects')
    op.drop_table('subjects')
    # ### end Alembic commands ###
