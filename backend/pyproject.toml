[tool.poetry]
name = "ai-past-questions-backend"
version = "0.1.0"
description = "Backend for AI-Powered Past Questions App"
authors = ["Your Name <you@example.com>"] # Replace with actual author info
readme = "README.md"
packages = [{include = "app", from = "."}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = ">=0.104,<0.111"
uvicorn = {extras = ["standard"], version = ">=0.20.0,<0.25.0"}
sqlalchemy = {extras = ["asyncio"], version = ">=2.0,<2.1"}
psycopg2-binary = ">=2.9,<2.10" # For alembic and sync driver if needed
asyncpg = ">=0.27,<0.30"
redis = ">=5.0,<5.1"
pydantic-settings = ">=2.0,<2.2"
python-dotenv = ">=1.0,<1.1"
passlib = {extras = ["bcrypt"], version = ">=1.7,<1.8"}
python-jose = {extras = ["cryptography"], version = ">=3.3,<3.4"}
alembic = ">=1.9,<1.14"
loguru = ">=0.7,<0.8"
# email-validator = ">=2.0,<2.2" # Optional
google-generativeai = ">=0.4,<0.6" # For Gemini API
google-cloud-aiplatform = ">=1.30,<1.50" # For Vertex AI
google-cloud-vision = ">=3.0,<4.0" # For OCR and image analysis
google-cloud-documentai = ">=2.20,<2.25" # For Document AI
google-auth = ">=2.0,<3.0" # For Google Cloud authentication
chromadb = ">=0.4,<0.5" # For ChromaDB client

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-asyncio = "^0.21.0"
httpx = "^0.25.0" # For testing FastAPI endpoints
black = "^23.0"
isort = "^5.0"
flake8 = "^6.0"
mypy = "^1.5" # Optional: for static typing

[tool.poetry.group.prod.dependencies]
# Add production specific dependencies if any, e.g. gunicorn
# gunicorn = "^21.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true # Recommended for FastAPI projects or add stubs
# plugins = "pydantic.mypy" # If using Pydantic v2 with mypy

[tool.pytest.ini_options]
pythonpath = ["."]
asyncio_mode = "auto"
# testpaths = [
#     "app/tests",
# ]
# env = [
#     "ENVIRONMENT=test" # Example: Set environment for tests
# ]
